package com.capgemini.chess.generated.entities;
// Generated Aug 24, 2016 8:42:47 AM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.capgemini.chess.dataaccess.enums.ChallengeStatus;

/**
 * Challenge generated by hbm2java
 */
@Entity
@Table(name = "challenge", uniqueConstraints = { @UniqueConstraint(columnNames = "receiver_id"),
		@UniqueConstraint(columnNames = "sender_id") })
public class ChallengeEntity extends BasicEntity implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private UserEntity sender;
	private UserEntity receiver;
	private Date startDate;
	private Date endDate;
	private ChallengeStatus status;
	private Set<GameEntity> games = new HashSet<GameEntity>(0);

	public ChallengeEntity() {
	}

	public ChallengeEntity(UserEntity sender, UserEntity receiver, Date startDate, Date endDate, ChallengeStatus status,
			Set<GameEntity> games) {
		super();
		this.sender = sender;
		this.receiver = receiver;
		this.startDate = startDate;
		this.endDate = endDate;
		this.status = status;
		this.games = games;
	}



	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sender_id", unique = true, nullable = false)
	public UserEntity getSender() {
		return this.sender;
	}

	public void setSender(UserEntity userBySenderId) {
		this.sender = userBySenderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "receiver_id", unique = true, nullable = false)
	public UserEntity getReceiver() {
		return this.receiver;
	}

	public void setReceiver(UserEntity userByReceiverId) {
		this.receiver = userByReceiverId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_date", nullable = false, length = 0)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_date", nullable = false, length = 0)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "status", nullable = false, length = 14)
	@Enumerated(EnumType.STRING)
	public ChallengeStatus getStatus() {
		return this.status;
	}

	public void setStatus(ChallengeStatus status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "challenge")
	public Set<GameEntity> getGames() {
		return this.games;
	}

	public void setGames(Set<GameEntity> games) {
		this.games = games;
	}

}
